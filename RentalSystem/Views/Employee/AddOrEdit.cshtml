@model RentalSystemData.Entities.Employee

@{
    ViewData["Title"] = "AddOrEdit";
}

<h4>Employee create form</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="AddOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmployeeCategory" class="control-label"></label>
                @*               <select asp-for="EmployeeCategoryId" class="form-control" asp-items="@(new SelectList(@ViewBag.empcategoryname, "Id","Name"))"></select>
                *@
                @*                        @Html.DropDownListFor(x=>x.EmployeeCategoryId, ViewBag.empcategoryname as SelectList, "add empl cate", new{ })
                *@
                @if (ViewBag.EmpCategories != null)
                {
                    @Html.DropDownListFor(modelItem => Model.EmployeeCategoryId, ViewBag.EmpCategories as SelectList,"---", new { @class="form-control"})

                }
                @Html.DropDownListFor(modelItem => Model.EmployeeCategoryId, ViewBag.EmpCategories as SelectList,"---", new { @class="form-control"})

                @*                @Html.DropDownListFor(model => Model.EmployeeCategoryId, new SelectList(@ViewBag.EmpCategories(), "Id", "Name"), "", new { @class = "form-control", @style = "width: 100%" })
                *@
                @*                          @Html.DropDownList("EmpCategories",ViewBag.EmpCategories as SelectList)
                *@
            </div>
            @*   <div class="form-group">
                @Html.Label("emp category")
                @Html.DropDownListFor(model => model.EmployeeCategoryId, new SelectList(Model., "Id", "Name"), "", new { @class = "form-control", @style = "width: 100%" })
                </div>*@
            <div class="form-row">
                <div class="form-group col-md-6">
                    <input type="submit" value="Submit" class="btn btn-primary btn-block" />
                </div>
                <div class="form-group col-md-6">
                    <a asp-action="Index" class="btn btn-secondary btn-block"><i class="fa fa-table"></i> Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}